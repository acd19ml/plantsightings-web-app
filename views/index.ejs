<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel='stylesheet' href='/stylesheets/style.css' />
</head>
<body>
<h1><%= title %></h1>

<!-- Sort Dropdown Menu -->
<div class="container">
    <div class="row">
        <div class="col">
            <form action="/" method="GET">
                <div class="form-group">
                    <label for="sortOrder">Sort By Date:</label>
                    <select name="sortOrder" id="sortOrder" class="form-control" onchange="this.form.submit()">
                        <option value="newest" <%= sortOrder === 'newest' ? 'selected' : '' %>>Date(Newest)</option>
                        <option value="oldest" <%= sortOrder === 'oldest' ? 'selected' : '' %>>Date(Oldest)</option>
                    </select>
                </div>
            </form>
        </div>
    </div>
    <!-- Filtering Menu for Flower -->
<div class="container">
    <div class="row">
        <div class="col">
            <form action="/" method="GET">
                <div class="form-group">
                    <label for="flowerFilter">Show Plants With:</label>
                    <select name="flowerFilter" id="flowerFilter" class="form-control" onchange="this.form.submit()">
                        <option value="all">All</option>
                        <option value="flowers" <%= flowerFilter === 'flowers' ? 'selected' : '' %>>Flowers</option>
                        <option value="noFlowers" <%= flowerFilter === 'noFlowers' ? 'selected' : '' %>>No Flowers</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="sortOrder">Sort By Date:</label>
                    <select name="sortOrder" id="sortOrder" class="form-control" onchange="this.form.submit()">
                        <option value="newest" <%= sortOrder === 'newest' ? 'selected' : '' %>>Date(Newest)</option>
                        <option value="oldest" <%= sortOrder === 'oldest' ? 'selected' : '' %>>Date(Oldest)</option>
                    </select>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Plant Sightings Display -->
<div class="container">
    <div class="row">
        <% data.forEach(plantsighting => { %>
            <div class="col-sm-6 col-md-4 col-lg-3">
                <a href="/display/<%= plantsighting._id %>"><img src="<%= plantsighting.photo %>" class="img-thumbnail" width="200" height="200" alt="Plant Photo"></a>
                <p><strong>Date Seen:</strong> <%= plantsighting.dateSeen.toDateString() %></p>
            </div>
        <% }); %>
    </div>
</div>
<hr>
<a href="/add"><p>Add New Plant Sighting</p></a>
<script>
    // Wait for the DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', function() {
        var request = indexedDB.open('MyDatabase', 1);  // Open the IndexedDB

        request.onerror = function(event) {
            console.error("IndexedDB error:", event.target.errorCode);
        };

        request.onsuccess = function(event) {
            var db = event.target.result;  // Successfully opened the database
            var tx = db.transaction('nicknames', 'readonly');  // Start a read-only transaction
            var store = tx.objectStore('nicknames');  // Access your 'nicknames' object store
            var getRequest = store.get('userNickname');  // Get the 'userNickname' from the store

            getRequest.onsuccess = function() {
                if (getRequest.result === undefined || getRequest.result.nickname === '') {
                    // If the 'userNickname' does not exist or the nickname is an empty string
                    console.log('Redirecting because no valid nickname exists.');
                    window.location.href = '/nickname';  // Redirect to the nickname page
                } else {
                    console.log('Nickname exists:', getRequest.result.nickname);  // Optionally log the found nickname
                }
            };

            getRequest.onerror = function(event) {
                console.error('Error fetching nickname from IndexedDB:', event.target.errorCode);
            };

            tx.oncomplete = function() {
                db.close();  // Close the db when the transaction is done
            };
        };
    });
</script>

</body>
</html>



